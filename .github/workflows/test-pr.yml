name: Test PR

on:
  pull_request:

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'
    
# Cancel existing runs if user makes another push
concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  generate-jobs:
    name: Generate Jobs
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.generate-jobs.outputs.strategy }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: generate-jobs
        name: Generate Jobs
        run: |
          export GENERATE_STACKBREW_LIBRARY='./dockerhub_doc_config_update.sh /dev/stdout'
          export GITHUB_REPOSITORY="eclipse-temurin"
          git clone --depth 1 https://github.com/docker-library/bashbrew.git -b master ~/bashbrew
          strategy="$(~/bashbrew/scripts/github-actions/generate.sh)"
          jq . <<<"$strategy" # sanity check / debugging aid
          echo "::set-output name=strategy::$strategy"

  test:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy) }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      # - name: Enable WSL on Windows for sbom
      #   if: runner.os == 'Windows'
      #   uses: Vampire/setup-wsl@v1
      #   with:
      #     distribution: Alpine
      - uses: actions/checkout@v3
      - name: Prepare Environment
        run: ${{ matrix.runs.prepare }}
      - name: Pull Dependencies
        run: ${{ matrix.runs.pull }}
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}
      - name: Test ${{ matrix.name }}
        run: ${{ matrix.runs.test }}
      - name: 'List docker images'
        run: ${{ matrix.runs.images }}
      - name: Scan Vulnerability on Linux(Windows support, soon)
        if: runner.os == 'Linux'
        id: scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ matrix.meta.entries[0].tags[0] }}'
          format: 'sarif'
          output: 'scan_dockerimage_result.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab for Linux
        if: steps.scan.conclusion == 'success'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'scan_dockerimage_result.sarif'
      - name: Generate SBOM for Linux
        uses: anchore/sbom-action@v0
        if: steps.scan.conclusion == 'success'
        with:
          image: '${{ matrix.meta.entries[0].tags[0] }}'
          format: 'cyclonedx-json'
          artifact-name: "SBOM_${{ matrix.name }}.json"

  conclusion:
    name: conclusion
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check Test Result
        run: ${{ needs.test.result == 'success' }}
